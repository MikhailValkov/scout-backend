name: "Build stage"

on:
  tags:
    - *stage

jobs:
  analyze:
    name: CodeQL analize
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
  
  tests:
    needs: analize
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 17.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  stage:
    needs: tests
    name: Build stage image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Building stage docker image
      run: |
        docker login ghcr.io -u ${{github.repository_owner}} -p ${{ secrets.CR }}
        docker build --target=stage . --file Dockerfile --tag ghcr.io/${{github.repository}}:stage-${{github.sha}}
        docker push ghcr.io/${{github.repository}}:stage-${{github.sha}}
        
  deploy:
    needs: stage
    name: Deploy stage
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_SSH_IP }}
        username: ${{ secrets.DEPLOY_SSH_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        port: ${{ secrets.DEPLOY_SSH_PORT }}
        script: |
          docker pull ghcr.io/${{github.repository}}:stage-${{github.sha}}
          docker stop ${{secrets.STAGE_CONTAINER_NAME}}
          docker rm ${{secrets.STAGE_CONTAINER_NAME}}
          docker run --name=${{secrets.STAGE_CONTAINER_NAME}} -p 3333:80 --restart=always -e DOMAIN=${{secrets.DOMAIN}} -e SENTRY_DSN=${{secrets.SENTRY_DSN}} -e TELEGRAM_BOT_TOKEN=${{secrets.TELEGRAM_BOT_TOKEN}} -d ghcr.io/${{github.repository}}:stage-${{github.sha}}