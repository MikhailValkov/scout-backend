name: "Build prod"

on:
  release:
    types: [published]

jobs:
  analyze:
    name: CodeQl analize
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  njsscan:
    needs: analyze
    name: NjsScan analize
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@7237412fdd36af517e2745077cedbf9d6900d711
      with:
        args: '. --sarif --output results.sarif || true'
    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif
  
  prod:
    needs: analyze
    name: Building production image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Building stage docker image
      run: |
        docker login ghcr.io -u ${{github.repository_owner}} -p ${{ secrets.CR }}
        docker build --target=prod . --file Dockerfile --tag ghcr.io/${{github.repository}}::${{github.ref_name}}
        docker push ghcr.io/${{github.repository}}::${{github.ref_name}}
  deploy:
    needs: prod
    name: Deploy prod
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_SSH_IP }}
        username: ${{ secrets.DEPLOY_SSH_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        port: ${{ secrets.DEPLOY_SSH_PORT }}
        script: |
          docker pull ghcr.io/${{github.repository}}:${{github.ref_name}}
          docker stop ${{secrets.PROD_CONTAINER_NAME}}
          docker rm ${{secrets.PROD_CONTAINER_NAME}}
          docker run --name=${{secrets.PROD_CONTAINER_NAME}} -p 4444:80 --restart=always -e DOMAIN=${{secrets.DOMAIN}} -e SENTRY_DSN=${{secrets.SENTRY_DSN}} -e TELEGRAM_BOT_TOKEN=${{secrets.TELEGRAM_BOT_TOKEN}} -d ghcr.io/${{github.repository}}::${{github.ref_name}}