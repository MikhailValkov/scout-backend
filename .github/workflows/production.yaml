name: "Build prod"

on:
  push:
    tags:
      - '**.prod'

jobs:
  analyze:
    name: CodeQl analize
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  njsscan:
    needs: analyze
    name: NjsScan analize
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@7237412fdd36af517e2745077cedbf9d6900d711
      with:
        args: '. --sarif --output results.sarif || true'
    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif
  
  tests:
    needs: njsscan
    name: Unit testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 17.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  stage:
    needs: tests
    name: Building production image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Building stage docker image
      run: |
        docker login ghcr.io -u ${{github.repository_owner}} -p ${{ secrets.CR }}
        docker build --target=stage . --file Dockerfile --tag ghcr.io/${{github.repository}}:prod-${{github.sha}}
        docker push ghcr.io/${{github.repository}}:prod-${{github.sha}}